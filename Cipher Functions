class Ciphers {
    getInfo() {
        return {
            id: 'cipher', //No uppercase
            name: 'Cipher', //Any string
            blocks: [
                {
                    opcode: 'cipher', //No uppercase
                    blockType: Scratch.BlockType.REPORTER, //In capital letters
                    //This creates an argument line with one term
                    text: 'Encrypt [TEXT] using [CIPHER] with key [KEY]', //Any string and argument (Argument in capital letters)
                    arguments: {
                        TEXT: {
                            type: Scratch.ArgumentType.STRING,
                            defaultValue: 'Hello, World!'
                        },
                        CIPHER: {
                            type: Scratch.ArgumentType.STRING,
                            defaultValue: 'Caesar',
                            menu: 'CIPHER_MENU'
                        },
                        KEY: {
                            type: Scratch.ArgumentType.NUMBER,
                            defaultValue: '1'
                        }
                    }
                }
            ],
            menus: {
                CIPHER_MENU: {
                    acceptReporters: true,
                    items: [
                        {
                            text: 'Caesar',
                            value: 'Caesar'
                        },
                        {
                            text: 'Numbered',
                            value: 'Numbered'
                        }
                    ]
                }
            }
        };
    }
    cipher(args) {
        if (args.CIPHER === 'Caesar') {
            for (let i = 0; i < args.TEXT.length; i++) {
                let CharCode = args.TEXT.charCodeAt(i);
                if ((CharCode >= 65 && CharCode <= 90) || (CharCode >= 97 && CharCode <= 122)) {
                    if (CharCode >= 65 && CharCode <= 90) {
                        CharCode += args.KEY;
                        if (CharCode > 90) {
                            CharCode -= 26;
                        }
                    } else if (CharCode >= 97 && CharCode <= 122) {
                        CharCode += args.KEY;
                        if (CharCode > 122) {
                            CharCode -= 26;
                        }
                    }
                    args.TEXT = args.TEXT.slice(0, i) + String.fromCharCode(CharCode) + args.TEXT.slice(i + 1);
                }
            }
            return args.TEXT;
        }
    }
}
Scratch.extensions.register(new Ciphers()); //! May need to be unsandboxed later